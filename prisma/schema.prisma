// Prisma Schema
// Docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Case {
  id        String               @id @default(uuid())
  authorId  String
  claim     String
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
  caseJson  String // serialized TypeScript "Case" object
  author    User                 @relation(fields: [authorId], references: [id])
  reviews   CaseInstanceReview[]
  instances CaseInstance[]
}

model CaseInstance {
  id        String               @id @default(uuid())
  caseId    String
  version   Int                  @default(0)
  caseJson  String // serialized TypeScript "Case" object
  createdAt DateTime             @default(now())
  case      Case                 @relation(fields: [caseId], references: [id])
  reviews   CaseInstanceReview[]
}

model CaseInstanceReview {
  id             String       @id @default(uuid())
  caseId         String
  caseInstanceId String
  authorId       String
  agreed         Boolean
  note           String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  reviewJson     String // serialized TypeScript "CaseReview" object
  case           Case         @relation(fields: [caseId], references: [id])
  caseInstance   CaseInstance @relation(fields: [caseInstanceId], references: [id])
  author         User         @relation(fields: [authorId], references: [id])
}

model User {
  id         String               @id @default(uuid())
  email      String               @unique
  name       String
  newsletter Boolean              @default(false)
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt
  cases      Case[]
  reviews    CaseInstanceReview[]
}
